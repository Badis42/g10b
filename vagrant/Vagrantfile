# -*- mode: ruby -*-
# vi: set ft=ruby :

SubNet="192.168.10"
Domain='oloc'
GitClone='env GIT_SSL_NO_VERIFY=true git clone https://github.com/oloc/g10b.git'

fileContent = JSON.parse(File.read("infra.json"), symbolize_names: true)

fileContent.each do |node|
  if node[:bootstrap] == 'master' 
    HostMaster="#{SubNet}.#{node[:iplastdigit]}\t#{node[:host]}.#{Domain} #{node[:host]}"
  end
end

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.



  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box     = "g10b"
  config.vm.box_url = "https://vagrantcloud.com/ubuntu/boxes/trusty64/versions/14.04/providers/virtualbox.box"

  # to avoid 'stdin: is not a tty'
  # See details : https://github.com/mitchellh/vagrant/issues/1673
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  fileContent.each do |node|
    config.vm.define node[:node] do |config|
      hostsupdate="echo -e \"127.0.0.1\tlocalhost\n127.0.1.1\t#{node[:host]}.#{Domain} #{node[:host]}\n\n#{HostMaster}\" > /etc/hosts"

      config.vm.hostname = node[:host] 
      config.vm.network :private_network, ip: "#{SubNet}.#{node[:iplastdigit]}"
      config.vm.provision :shell, :inline => hostsupdate
      config.vm.provision :shell, :inline => "sudo apt-get install -y git"
      config.vm.provision :shell, :inline => "rm -Rf ./g10b"
      config.vm.provision :shell, :inline => GitClone
      config.vm.provision :shell, :inline => "sudo ./g10b/install-#{node[:bootstrap]}.sh"

      config.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--memory", node[:memory]]
        vb.customize ["modifyvm", :id, "--name", node[:node]]
      end
    end
  end


end
